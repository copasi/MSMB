/* Generated by JTB 1.4.4 */
package msmb.parsers.mathExpression.syntaxtree;

import msmb.parsers.mathExpression.visitor.*;

/**
 * JTB node class for the production Name:<br>
 * Corresponding grammar :<br>
 * nodeChoice -> . %00 < IDENTIFIER ><br>
 * .......... .. | %01 PrimitiveType()<br>
 * .......... .. | %02 < PI ><br>
 * .......... .. | %03 < TIME ><br>
 * .......... .. | %04 < FLOOR ><br>
 * .......... .. | %05 < DELAY ><br>
 * .......... .. | %06 < CEIL ><br>
 * .......... .. | %07 < TAN ><br>
 * .......... .. | %08 < TANH ><br>
 * .......... .. | %09 < COSH ><br>
 * .......... .. | %10 < LOG10 ><br>
 * .......... .. | %11 < ABS ><br>
 * .......... .. | %12 < COS ><br>
 * .......... .. | %13 < SIN ><br>
 * .......... .. | %14 < LOG ><br>
 * .......... .. | %15 < EXP ><br>
 * .......... .. | %16 < NAN ><br>
 */
public class Name implements INode {

  /** A child node */
  public NodeChoice nodeChoice;

  /** The serial version uid */
  private static final long serialVersionUID = 144L;

  /**
   * Constructs the node with its child node.
   *
   * @param n0 the child node
   */
  public Name(final NodeChoice n0) {
    nodeChoice = n0;
  }

  /**
   * Accepts the IRetArguVisitor visitor.
   *
   * @param <R> the user return type
   * @param <A> the user argument type
   * @param vis the visitor
   * @param argu a user chosen argument
   * @return a user chosen return information
   */
  public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
    return vis.visit(this, argu);
  }

  /**
   * Accepts the IRetVisitor visitor.
   *
   * @param <R> the user return type
   * @param vis the visitor
   * @return a user chosen return information
   */
  public <R> R accept(final IRetVisitor<R> vis) {
    return vis.visit(this);
  }

  /**
   * Accepts the IVoidArguVisitor visitor.
   *
   * @param <A> the user argument type
   * @param vis the visitor
   * @param argu a user chosen argument
   */
  public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
    vis.visit(this, argu);
  }

  /**
   * Accepts the IVoidVisitor visitor.
   *
   * @param vis the visitor
   */
  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }

}
